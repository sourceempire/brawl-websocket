name: Manual Release

on: 
 workflow_dispatch:
    inputs:
      increment:
        type: choice
        description: 'Version increment type'
        required: true
        default: 'patch'
        options: 
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read .nvmrc
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://npm.pkg.github.com'
          scope: '@sourceempire'

      - name: Install dependencies and build
        run: |
          npm ci
          npm run build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_PKG_TOKEN }}

      - name: Bump version
        id: version_bump
        run: |
          npm version ${{ github.event.inputs.increment }} --no-git-tag-version
          echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Commit version bump to main
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add package.json
          git commit -m "Bump version to ${{ env.NEW_VERSION }}"
          git push origin main

      - name: Create Temporary Branch
        run: |
          git checkout -b release-v${{ env.NEW_VERSION }}

      - name: Commit dist folder
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add dist
          git commit -m "Update dist folder for release v${{ env.NEW_VERSION }}"

      - name: Push Temporary Branch
        run: |
          git push origin release-v${{ env.NEW_VERSION }}

      - name: Create Release Tag
        run: |
          git tag v${{ env.NEW_VERSION }}
          git push origin v${{ env.NEW_VERSION }}

      - name: Publish package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_PKG_TOKEN }}

      - name: Delete Temporary Branch
        run: |
          git push origin --delete release-v${{ env.NEW_VERSION }}